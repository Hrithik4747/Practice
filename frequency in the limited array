You are given an array arr[] containing positive integers. The elements in the array arr[] range from  1 to n (where n is the size of the array), and some numbers may be repeated or absent. Your have to count the frequency of all numbers in the range 1 to n and return an array of size n such that result[i] represents the frequency of the number i (1-based indexing).


class Solution {
  public:
    // Function to count the frequency of all elements from 1 to N in the array.
    vector<int> frequencyCount(vector<int>& arr) {
        // code here
        vector<int> frequency;
        int n = arr.size();
        
        // defining hash map
        unordered_map<int,int> count;
        
        //traversing array and filling hashmap
        for( auto num:arr){
            count[num]++;
            
        }
        // traversing hashmap
        for(int i=1;i<=n;i++){
            frequency.push_back(count[i]);
        }
        
        return frequency;
    }
    
};
