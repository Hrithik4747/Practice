Given an unsorted array arr containing only non-negative integers, your task is to find a continuous subarray (a contiguous sequence of elements) whose sum equals a specified value target. You need to return the 1-based indices of the leftmost and rightmost elements of this subarray.


class Solution {
  public:
    vector<int> subarraySum(vector<int> &arr, int target) {
        // code here
        int sum=0,l=0;
        
        for(int i=0;i<arr.size();i++){
            sum+=arr[i];
          
          while (sum > target && l <= i) {
           sum -= arr[l++];
        }
            if (sum==target ) return {l+1,i+1};
        }    
        
        return {-1};

    }
};
